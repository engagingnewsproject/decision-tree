"use strict";function TreeView(t){var e,n;if("object"!==_typeof(t.container))return console.error("Tree container must be a valid object. Try `container: document.getElementById(your-id)`."),!1;this.getEl=function(){return e},this.getId=function(){},this.getTree=function(){return n},this.setTree=function(t){return void 0===n&&(n=t),n},t.Tree&&this.setTree(t.Tree),e=t.container,e.addEventListener("click",this.click.bind(this))}Handlebars.registerHelper("environment",function(t){return"has-js"}),Handlebars.registerHelper("group_start",function(t,e,n,o){for(var r=0;r<n.length;r++)if(n[r].group_id===e)return n[r].questions[0]===t?o.fn({group_id:n[r].group_id,group_title:n[r].title}):"";return""}),Handlebars.registerHelper("group_end",function(t,e,n,o){for(var r=0;r<n.length;r++)if(n[r].group_id===e){var i=n[r].questions;return i[i.length-1]===t?o.fn(this):""}return""});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};TreeView.prototype={constructor:TreeView,on:function(t,e){switch(console.log(t),t){case"ready":Tree=e,this.setTree(Tree),this.render(Tree.getData());break;case"update":this.update(e)}},render:function(t){var e=window.TreeTemplates.tree,n=e(t);this.getEl().innerHTML=n,this.bindAllData()},update:function(t){console.log(t)},click:function(t){var e=t.target;e!==t.currentTarget&&"A"===e.nodeName&&(t.preventDefault(),console.log(e.data),this.emit("update","state",e.data)),t.stopPropagation()},emit:function(t,e,n){var o=this.getTree();switch(t){case"update":o.update(e,n)}},bindAllData:function(){Tree=this.getTree();for(var t=["question","start","end","group"],e=0;e<t.length;e++)for(var n=Tree.getDataByType(t[e]),o=0;o<n.length;o++){var r=n[o][t[e]+"_id"],i=document.getElementById("enp-tree__el--"+r);if(this.bindDOMData(n[o],i,t[e]),"question"===t[e])for(var s=n[o].options,a=0;a<s.length;a++){var u=document.getElementById("enp-tree__el--"+s[a].option_id);this.bindDOMData(s[a],u,"option")}}},bindDOMData:function(t,e,n){if(void 0===e.data){var o=void 0;switch(n){case"start":o={start_id:t.start_id,type:"start"};break;case"group":o={group_id:t.group_id,type:"group"};break;case"question":o={question_id:t.question_id,type:"question"},o.options=[];for(var r=0;r<t.options.length;r++)o.options.push(t.options[r].option_id);break;case"option":o={option_id:t.option_id,type:"option",question_id:t.question_id,destination_id:t.destination_id,destination_type:t.destination_type};break;case"end":o={end_id:t.end_id,type:"end"}}return e.data=o,e.data}return!1}};var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(){function t(t,e){var n,o;this.observers=[];this.getData=function(){return n},this.getState=function(){return o},this.setState=function(t,e){var n=["start","question","end"];if(!n.includes(t))return console.error(t+" is not an allowed state. Allowed states are "+n.toString()),this.emitError("setState",{stateType:t,stateID:e}),!1;var r=this.getDataByType(t,e);if(!1===r||void 0===r||"object"!==(void 0===r?"undefined":_typeof(r)))return console.error(e+" is invalid for the current state of '"+t+"'"),!1;o.type=t,o.id=e,this.emit("update",o)},this.setObservers(e),function(t){n=t,o={id:t.starts[0].start_id,type:"start"}}(t),this.emit("ready",this)}function e(t){if("string"!=typeof t.slug)return console.error("Tree slug must be a string."),!1;n(t.slug).then(o.bind(t)).catch(r)}function n(t){return new Promise(function(e,n){var o=new XMLHttpRequest;o.overrideMimeType("application/json"),o.open("GET","http://dev/decision-tree/api/v1/trees/"+t+"/compiled?minfied=true",!0),o.onload=function(){200===o.status?e(o):n(Error("Tree could not be loaded:"+o.statusText))},o.onerror=function(){n(Error("There was a network error."))},o.send()})}function o(e){if(!/https?:\/\/(?:dev\/decision-tree|tree\.engagingnewsproject\.org|enptree\.staging\.wpengine\.com)\/api\//.test(e.responseURL))return console.error("responseURL from an invalidated source."),!1;var n=JSON.parse(e.response),o=new TreeView({container:this.container}),r=[o],s=new t(n,r);i.push(s)}function r(t){console.error(t)}t.prototype={constructor:t,emit:function(t,e){console.log("emitting "+t);for(var n=0;n<this.observers.length;n++)this.observers[n].on(t,e)},emitError:function(t,e){this.emit("error",{action:t,data:e})},update:function(t,e){switch(console.log("Request update with this data:"),console.log(e),t){case"state":this.updateState(e)}},updateState:function(t){switch(t.type){case"start":var e=this.getQuestions()[0];this.setState("question",e.question_id);break;case"option":this.setState(t.destination_type,t.destination_id)}},getDataByType:function(t,e){var n=void 0,o=void 0,r=void 0;return o=["question","group","end","start"],o.includes(t)?(r=this.getData(),r=r[t+"s"],void 0!==e&&(n=this.getIndexBy(r,t+"_id",e),r=void 0!==n?r[n]:void 0),r):(console.error("Allowed getDataByType types are "+o.toString()),!1)},getQuestions:function(t){return void 0!==t?this.getDataByType("question",t):this.getDataByType("question")},getStarts:function(t){return void 0!==t?this.getDataByType("start",t):this.getDataByType("start")},getEnds:function(t){return void 0!==t?this.getDataByType("end",t):this.getDataByType("end")},getGroups:function(t){return void 0!==t?this.getDataByType("group",t):this.getDataByType("group")},getOptions:function(t,e){var n=void 0,o=void 0,r=void 0;return r=this.getQuestions(t),void 0!==e?(o=this.getIndexBy(r.options,"option_id",e),n=r.options[o]):n=r.options,n},setObservers:function(t){for(var e=0;e<t.length;e++)this.addObserver(t[e]);return this.observers},addObserver:function(t){this.observers.push(t)},getObservers:function(){return this.observers},getIndexBy:function(t,e,n){for(var o=0;o<t.length;o++)if(t[o][e]==n)return o}};var i=[];window.Tree=t,window.createTree=e,window.trees=i}(window);